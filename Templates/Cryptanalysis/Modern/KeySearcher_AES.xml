<?xml version="1.0" encoding="utf-8"?>
<sample>
  <!--- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <!--File name: KeySearcher_AES.xml-->
  <!--Last edited: 2022.02.08-->
  <!--- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <!--- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <!--Language 'en' starts here:-->
  <!--- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <title lang="en">AES Analysis Using Entropy (2) – with Changeable Plaintext</title>
  <summary lang="en">Cryptanalysis of <i>AES</i> using the <i>KeySearcher</i> component and an entropy function.</summary>
  <description lang="en">This template shows the cryptanalysis of the <i>AES</i> algorithm using the <i>KeySearcher</i> component and an entropy function. For this purpose, a given plaintext is encrypted with <i>AES</i> and the resulting ciphertext is sent to the <i>Keysearcher</i>. The <i>KeySearcher</i> now tries all keys of the given keyspace and evaluates the resulting plaintexts with the entropy function. The plaintext with the best score is sent to the output and should be identical to the original paintext.</description>
  <keywords>advanced, Daemen, symmetric, NIST, Rijmen, Rijndael, keysearcher, Attack, Analysis</keywords>
  <replacements lang="en">
    <replacement key="$Plaintext$" value="Plaintext" />
    <replacement key="$Revealed Plaintext$" value="Revealed Plaintext" />
    <replacement key="$StringDecoder$" value="String Decoder" />
    <replacement key="$StringEncoder$" value="String Encoder" />
    <replacement key="$Key$" value="Key" />
    <replacement key="$KeySearcher$" value="KeySearcher" />
    <replacement key="$memo$" value="This template shows how to use a brute-force search to attack an AES-encrypted text. \line The Keysearcher component searches a subspace of the AES keyspace and uses the entropy of the decrypted plaintexts to find the correct one.\line The plaintext that has the lowest entropy will rank first in the bestlist. \line As input, the Keysearcher receives a ciphertext, which was entered as plaintext and then encrypted using AES." />
  </replacements>
  <!--- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <!--Language 'de' starts here:-->
  <!--- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <title lang="de">AES-Analyse per Entropie (2) – mit veränderbarem Klartext</title>
  <summary lang="de">Kryptoanalyse der <i>AES</i>-Verschlüsselung mittels der <i>KeySearcher</i>-Komponente und einer Entropie-Funktion</summary>
  <description lang="de">Diese Vorlage zeigt die Kryptoanalyse der <i>AES</i>-Verschlüsselung mittels der <i>KeySearcher</i>-Komponente und einer Entropie-Funktion. Hierzu wird ein gegebener Klartext mit <i>AES</i> verschlüsselt und der entstehende Geheimtext an den <i>Keysearcher</i> weitergeleitet. Der <i>KeySearcher</i> probiert nun alle Schlüssel des angegebenen Schlüsselraumes und bewertet die resultierenden Klartexte mittels der Entropie-Funktion. Der Klartext mit der besten Bewertung wird ausgegeben und sollte dem ursprünglichen Klartext entsprechen.</description>
  <keywords lang="de">asymmetrisch, Daemen, NIST, Rijmen, Rijndael, Keysearcher, Angriff</keywords>
  <replacements lang="de">
    <replacement key="$Plaintext$" value="Klartext" />
    <replacement key="$Revealed Plaintext$" value="Entschlüsselter Klartext" />
    <replacement key="$StringDecoder$" value="String-Dekodierer" />
    <replacement key="$StringEncoder$" value="String-Kodierer" />
    <replacement key="$Key$" value="Schlüssel" />
    <replacement key="$KeySearcher$" value="Schlüsselsuche" />
    <replacement key="$memo$" value="Diese Vorlage zeigt, wie man einen mit AES verschlüsselten Text mittels Brute-Force-Suche angreifen kann.\line Die Schlüsselsucher-Komponente durchsucht einen Teilraum des AES-Schlüsselraums und nutzt die Entropie der entschlüsselten Klartexte, um den richtigen zu finden.\line Der Klartext, der die geringste Entropie hat, steht dann in der Bestenliste an erster Stelle.\line Als Eingabe erhält der Keysearcher einen Geheimtext, der als Klartext eingegeben und dann mit AES verschlüsselt wurde." />
  </replacements>
  <!--- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <!--The general section starts here:-->
  <!--- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <icon file="AES.png" />
  <relevantPlugins>
    <plugin name="AES" />
    <plugin name="CostFunction" />
    <plugin name="KeySearcher" />
  </relevantPlugins>
</sample>