<?xml version="1.0" encoding="utf-8"?>
<sample>
  <!--- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <!--File name: ISAP_BitCommitmentScheme.xml-->
  <!--Last edited: 2022.02.08-->
  <!--- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <!--- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <!--Language 'en' starts here:-->
  <!--- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <title lang="en">ISAP Bit Commitment Scheme</title>
  <summary lang="en">Usage of the <i>ISAP Bit Commitment Scheme</i></summary>
  <description lang="en">This template shows the usage of the <i>ISAP Bit Commitment Scheme</i>.<newline /><newline />
In cryptography, a commitment scheme allows one party to commit to a chosen value while keeping it hidden to other parties, with the ability to reveal the committed value later. Commitment schemes are designed so that a party cannot change the value after it has committed to it: That is, commitment schemes are binding.</description>
  <keywords>commitment, binding, hidden, ISAP, diophantine</keywords>
  <replacements lang="en">
    <replacement key="$InputBit$" value="Input Bit" />
    <replacement key="$ISAPBitCommitmentScheme$" value="ISAP Bit Commitment Scheme" />
    <replacement key="$memo$" value="{\b Description of the method}\line\line In cryptography, a commitment scheme allows one party to commit to a chosen value while keeping it hidden to other parties, with the ability to reveal the committed value later. Commitment schemes are designed so that a party cannot change the value after it has committed to it: That is, commitment schemes are binding.\line\line This template demonstrates the method using the bit based &quot;ISAP Bit Commitment Scheme&quot; (ISAP = inhomogeneous simultaneous diophantine approximation problem).\line The boolean input component &quot;Input Bit&quot; represents the bit value to commit to. The output components &quot;P&quot; and &quot;Q&quot; are representing the commitment. The output component &quot;Log&quot; shows information about the internal processing of the algorithm.\line\line Further details about the method can be taken from the documentation of the &quot;ISAP Bit Commitment Scheme&quot; component." />
  </replacements>
  <!--- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <!--Language 'de' starts here:-->
  <!--- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <title lang="de">ISAP Bit-Commitment-Verfahren</title>
  <summary lang="de">Benutzung des <i>ISAP Bit-Commitment-Verfahrens</i></summary>
  <description lang="de">Diese Vorlage zeigt die Benutzung des <i>ISAP Bit-Commitment-Verfahrens</i>.<newline /><newline />
Ein Commitment-Protokoll ist ein kryptografisches Zwei-Parteien-Protokoll, das es einer Partei ermöglicht, sich gegenüber der anderen Partei verbindlich auf einen Wert festzulegen, ohne etwas über diesen Wert zu verraten. Später kann dieser Wert dann aufgedeckt werden. Hat sich eine Partei auf einen Wert festgelegt, kann sie diesen nicht mehr unbemerkt verändern.</description>
  <keywords lang="de">verbindlich, versteckt</keywords>
  <replacements lang="de">
    <replacement key="$InputBit$" value="Eingabe-Bit" />
    <replacement key="$ISAPBitCommitmentScheme$" value="ISAP Bit-Commitment-Verfahren" />
    <replacement key="$memo$" value="{\b Beschreibung des Verfahrens}\line\line Ein Commitment-Protokoll ist ein kryptografisches Zwei-Parteien-Protokoll, das es einer Partei ermöglicht, sich gegenüber der anderen Partei verbindlich auf einen Wert festzulegen, ohne etwas über diesen Wert zu verraten. Später kann dieser Wert dann aufgedeckt werden. Hat sich eine Partei auf einen Wert festgelegt, kann sie diesen nicht mehr unbemerkt verändern.\line\line Diese Vorlage demonstriert das Verfahren anhand des Bit-basierten &quot;ISAP Bit-Commitment-Verfahrens&quot; (ISAP = inhomogenes simultanes diophantisches Approximationsproblem).\line Die boolesche Eingabekomponente &quot;Eingabe-Bit&quot; stellt den festzulegenden Bit-Wert dar. Die Ausgabekomponenten &quot;P&quot; und &quot;Q&quot; stellen das &quot;Commitment&quot; dar. Die Ausgabekomponente &quot;Log&quot; zeigt interne Informationen der Algorithmusausführung.\line\line Weitere Details des Verfahrens können der Dokumentation der &quot;ISAP Bit-Commitment-Verfahren&quot; Komponente entnommen werden." />
  </replacements>
  <!--- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <!--The general section starts here:-->
  <!--- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <icon file="ISAP_BitCommitmentScheme.png" />
  <relevantPlugins>
    <plugin name="ISAPBitCommitmentScheme" />
    <plugin name="BooleanInput" />
  </relevantPlugins>
</sample>