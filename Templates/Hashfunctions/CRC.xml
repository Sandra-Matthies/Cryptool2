<?xml version="1.0" encoding="utf-8"?>
<sample>
  <!--- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <!--File name: CRC.xml-->
  <!--Last edited: 2022.02.08-->
  <!--- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <!--- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <!--Language 'en' starts here:-->
  <!--- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <title lang="en">CRC</title>
  <summary lang="en">Usage of the <i>CRC</i> checksum function</summary>
  <description lang="en">This template shows the usage of the <i>CRC</i> checksum function.</description>
  <keywords>hash</keywords>
  <replacements lang="en">
    <replacement key="$memo$" value="A {\b checksum} (such as CRC32) enables to notice accidental changes. They are fast and normally used in communication, but they are not safe to protect against malicious changes: It is pretty easy to create a file with a particular checksum.\line \line In general, a {\b hash function} maps some data to other data. It is often used to speed up comparisons or create a hash table. Not all hash functions are secure and the hash does not necessarily changes when the data changes.\line \line A {\b cryptographic hash function} (such as SHA1) is a checksum that is secure against malicious changes. It is pretty hard to create a file with a specific cryptographic hash.\line \line Often, cryptographic hash functions are simply called hash functions.\line \line So checksums and cryptographic hash functions are similar in that they are both are deterministic and can map a variable size data to a fixed size. They can both be used to check for sameness, although with different guarantees, and so have completely different applications." />
    <replacement key="$Text Input$" value="Text Input" />
    <replacement key="$CRC value (hexadecimal)$" value="CRC value (hexadecimal)" />
    <replacement key="$CRC value (binary)$" value="CRC value (binary)" />
    <replacement key="$String Encoder$" value="String Encoder" />
  </replacements>
  <!--- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <!--Language 'de' starts here:-->
  <!--- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <title lang="de">CRC</title>
  <summary lang="de">Benutzung des <i>CRC</i>, mit dem der Empfänger die Nachricht auf Integrität überprüfen kann</summary>
  <description lang="de">Diese Vorlage zeigt die Benutzung des <i>CRC</i>, mit dem der Empfänger die Nachricht auf Integrität überprüfen kann.</description>
  <keywords lang="de">hash</keywords>
  <replacements lang="de">
    <replacement key="$memo$" value="Eine {\b Prüfsumme} (z. B. CRC32) ermöglicht das Erkennen versehentlicher Änderungen. Sie sind schnell und werden normalerweise in der Kommunikation verwendet, aber sie schützen nicht vor böswilligen Änderungen: Es ist ziemlich einfach, eine Datei mit einer bestimmten Prüfsumme zu erstellen. \line \line Im Allgemeinen ordnet eine {\b Hash-Funktion} Daten anderen Daten zu. Sie wird häufig verwendet, um Vergleiche zu beschleunigen oder eine Hash-Tabelle zu erstellen. Nicht alle Hash-Funktionen sind sicher und der Hash ändert sich nicht unbedingt, wenn sich die Daten ändern. \line \line Eine {\b kryptografische Hash-Funktion} (wie SHA1) ist eine Prüfsumme, die vor böswilligen Änderungen geschützt ist. Es ist ziemlich schwierig, eine Datei mit einem bestimmten kryptografischen Hash zu erstellen. \line \line Kryptographische Hash-Funktionen werden häufig einfach als Hash-Funktionen bezeichnet. \line \line Prüfsummen und kryptografische Hash-Funktionen sind insofern ähnlich, als sie beide deterministisch sind und Daten variabler Größe einer festen Größe zuordnen können. Sie können beide verwendet werden, um die Gleichheit zu überprüfen, wenn auch mit unterschiedlichen Garantien, und haben daher völlig unterschiedliche Anwendungen." />
    <replacement key="$Text Input$" value="Texteingabe" />
    <replacement key="$CRC value (hexadecimal)$" value="CRC-Wert (hexadezimal)" />
    <replacement key="$CRC value (binary)$" value="CRC-Wert (binär)" />
    <replacement key="$String Encoder$" value="String-Dekodierer" />
  </replacements>
  <!--- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <!--The general section starts here:-->
  <!--- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <icon file="CRC.png" />
  <relevantPlugins>
    <plugin name="CRC" />
  </relevantPlugins>
</sample>