//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CrypTool.JosseCipherAnalyzer.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CrypTool.JosseCipherAnalyzer.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Alphabet ähnelt.
        /// </summary>
        public static string Alphabet {
            get {
                return ResourceManager.GetString("Alphabet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Alphabet ähnelt.
        /// </summary>
        public static string AlphabetInput {
            get {
                return ResourceManager.GetString("AlphabetInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The alphabet used during the cryptanalysis ähnelt.
        /// </summary>
        public static string AlphabetInputTooltip {
            get {
                return ResourceManager.GetString("AlphabetInputTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Analysis Mode ähnelt.
        /// </summary>
        public static string AnalyzerMode {
            get {
                return ResourceManager.GetString("AnalyzerMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The mode which is used to analyse the ciphertext ähnelt.
        /// </summary>
        public static string AnalyzerModeTooltip {
            get {
                return ResourceManager.GetString("AnalyzerModeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Attack type ähnelt.
        /// </summary>
        public static string AttackType {
            get {
                return ResourceManager.GetString("AttackType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ABCDEFGHIJKLMNOPQRSTUVXYZ ähnelt.
        /// </summary>
        public static string BaseAlphabet {
            get {
                return ResourceManager.GetString("BaseAlphabet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bigrams ähnelt.
        /// </summary>
        public static string CFBigrams {
            get {
                return ResourceManager.GetString("CFBigrams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Entropy ähnelt.
        /// </summary>
        public static string CFEntropy {
            get {
                return ResourceManager.GetString("CFEntropy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hexagrams ähnelt.
        /// </summary>
        public static string CFHexagrams {
            get {
                return ResourceManager.GetString("CFHexagrams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IoC ähnelt.
        /// </summary>
        public static string CFIoC {
            get {
                return ResourceManager.GetString("CFIoC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pentragrams ähnelt.
        /// </summary>
        public static string CFPentragrams {
            get {
                return ResourceManager.GetString("CFPentragrams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tetragrams ähnelt.
        /// </summary>
        public static string CFTetragrams {
            get {
                return ResourceManager.GetString("CFTetragrams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Trigrams ähnelt.
        /// </summary>
        public static string CFTrigrams {
            get {
                return ResourceManager.GetString("CFTrigrams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unigrams ähnelt.
        /// </summary>
        public static string CFUnigrams {
            get {
                return ResourceManager.GetString("CFUnigrams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ciphertext ähnelt.
        /// </summary>
        public static string CipherTextInput {
            get {
                return ResourceManager.GetString("CipherTextInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The ciphertext to be analyzed ähnelt.
        /// </summary>
        public static string CipherTextInputTooltip {
            get {
                return ResourceManager.GetString("CipherTextInputTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cost function ähnelt.
        /// </summary>
        public static string CostFunctionType {
            get {
                return ResourceManager.GetString("CostFunctionType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The cost function which is used during the cryptanalysis ähnelt.
        /// </summary>
        public static string CostFunctionTypeTooltip {
            get {
                return ResourceManager.GetString("CostFunctionTypeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Elapsed Time: ähnelt.
        /// </summary>
        public static string ElapsedLabel {
            get {
                return ResourceManager.GetString("ElapsedLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die End Time: ähnelt.
        /// </summary>
        public static string EndLabel {
            get {
                return ResourceManager.GetString("EndLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key ähnelt.
        /// </summary>
        public static string Key {
            get {
                return ResourceManager.GetString("Key", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key ähnelt.
        /// </summary>
        public static string KeyHeader {
            get {
                return ResourceManager.GetString("KeyHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key length ähnelt.
        /// </summary>
        public static string KeylengthCaption {
            get {
                return ResourceManager.GetString("KeylengthCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Lower bound of keylength ähnelt.
        /// </summary>
        public static string KeylengthFromCaption {
            get {
                return ResourceManager.GetString("KeylengthFromCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start from this keylength during the cryptanalysis ähnelt.
        /// </summary>
        public static string KeylengthFromTooltip {
            get {
                return ResourceManager.GetString("KeylengthFromTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key length: ähnelt.
        /// </summary>
        public static string KeyLengthLabel {
            get {
                return ResourceManager.GetString("KeyLengthLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upper bound of keylength ähnelt.
        /// </summary>
        public static string KeylengthToCaption {
            get {
                return ResourceManager.GetString("KeylengthToCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Stop the cryptanalysis after evaluating this keylength ähnelt.
        /// </summary>
        public static string KeylengthToTooltip {
            get {
                return ResourceManager.GetString("KeylengthToTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Keyword ähnelt.
        /// </summary>
        public static string KeyOutput {
            get {
                return ResourceManager.GetString("KeyOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Keyword found during the cryptanalysis ähnelt.
        /// </summary>
        public static string KeyOutputTooltip {
            get {
                return ResourceManager.GetString("KeyOutputTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Keys/second: ähnelt.
        /// </summary>
        public static string KeysLabel {
            get {
                return ResourceManager.GetString("KeysLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Language ähnelt.
        /// </summary>
        public static string LanguageCaption {
            get {
                return ResourceManager.GetString("LanguageCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sets the language of the cost function ähnelt.
        /// </summary>
        public static string LanguageTooltip {
            get {
                return ResourceManager.GetString("LanguageTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Analysis ähnelt.
        /// </summary>
        public static string LocalLabel {
            get {
                return ResourceManager.GetString("LocalLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hillclimbing ähnelt.
        /// </summary>
        public static string ModeAnalyzerModeHillclimbing {
            get {
                return ResourceManager.GetString("ModeAnalyzerModeHillclimbing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Simulated annealing ähnelt.
        /// </summary>
        public static string ModeAnalyzerModeSimulatedAnnealing {
            get {
                return ResourceManager.GetString("ModeAnalyzerModeSimulatedAnnealing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Plaintext ähnelt.
        /// </summary>
        public static string PlaintextHeader {
            get {
                return ResourceManager.GetString("PlaintextHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Plaintext ähnelt.
        /// </summary>
        public static string PlainTextOutput {
            get {
                return ResourceManager.GetString("PlainTextOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output for the decrypted ciphertext ähnelt.
        /// </summary>
        public static string PlainTextOutputTooltip {
            get {
                return ResourceManager.GetString("PlainTextOutputTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Josse Cipher Analyzer ähnelt.
        /// </summary>
        public static string PluginName {
            get {
                return ResourceManager.GetString("PluginName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cryptanalysis of the Josse Cipher ähnelt.
        /// </summary>
        public static string PluginTooltip {
            get {
                return ResourceManager.GetString("PluginTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number of restarts ähnelt.
        /// </summary>
        public static string Restarts {
            get {
                return ResourceManager.GetString("Restarts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the number of restarts performed by the cryptanalysis algorithms ähnelt.
        /// </summary>
        public static string RestartsTooltip {
            get {
                return ResourceManager.GetString("RestartsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cost value ähnelt.
        /// </summary>
        public static string ScoreHeader {
            get {
                return ResourceManager.GetString("ScoreHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start Time ähnelt.
        /// </summary>
        public static string StartLabel {
            get {
                return ResourceManager.GetString("StartLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bestlist ähnelt.
        /// </summary>
        public static string TopTenLabel {
            get {
                return ResourceManager.GetString("TopTenLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use spaces ähnelt.
        /// </summary>
        public static string UseSpacesCaption {
            get {
                return ResourceManager.GetString("UseSpacesCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Specifies whether spaces are used  ähnelt.
        /// </summary>
        public static string UseSpacesTooltip {
            get {
                return ResourceManager.GetString("UseSpacesTooltip", resourceCulture);
            }
        }
    }
}
