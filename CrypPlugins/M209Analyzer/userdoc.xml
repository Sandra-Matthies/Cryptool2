<?xml version="1.0" encoding="utf-8" ?>

<!-- You can edit this file manually or with the Util/CrypDocumentationEditor -->
<documentation>
  <language culture="en"/>
  <language culture="de-DE"/>

  <introduction lang="en">
    The Hagelin M-209 is a portable cipher machine used by the U.S. Army during the World War II and until the Korean War.
    The original M-209 is fully analog and has a larger keyspace than the Enigma, the cipher machine used by the Germans in WW2.
    <newline/>
    This analyzer provides two kind of attacks: ciphertext-only and known-plaintext attack.
    <newline/>
    <b>Ciphertext-only attack</b>
    <newline/>
    The ciphertext-only attack uses hill climbing and simulated annealing to search for optimal key settings.
    These methods are combinded using a hybrid nested approach. 
    A hill climbing process searches for optimal lug settings and an inner simulated annealing process searches for optimal pin settings for this lug setting.
    <newline/>
    These methods are as follows:
    <newline/>
    Hill-Climbing-algorithm for the Lug settings:
    <newline/>
    1. A certain number of random keys are created. Each key is evaluated by using the key to decrypt the encrypted text. Based on the relative frequencies of the letters, in the decrypted text, an score value is calculated.
    The evaluated keys are compared and the best key is used further in the algorithm.
    <newline/>
    2. as long as there is no new best key, the following steps are performed:
    <newline/>
    <t/>a. Small changes are made to Lug settings (2 settings changed).
    Then a simulated annealing algorithm is run on the pin settings, which is described below.
    For the current lug settings, the best pin settings are searched and the best key is kept.
    <newline/>
     b. If a. did not lead to a better key, major changes are made to the lug settings and then the best pin settings are searched for again (analogous to a.).
    <newline/>
    Simulated-Annealing algorithm for pin settings:
    <newline/>
    1. Random pin settings are generated:
    <newline/>
	  2. As long as the temperature is greater than a certain threshold, the temperature is used for following steps, otherwise the temperature is set to 0: 
	  <newline/>
    a. Various changes are made to the pin settings.
	    e.g. 1 pin is flipped, all pins are inverted, 2 pins on one, or on two different rotors are flipped.
	  <newline/>
    b. The obtained key is evaluated.
	  <newline/>
    c. Depending on the value and temperature, it is decided if the key is a new best key.
    <newline/>
    <b>Known-plaintext attack</b>
    <newline/>
    The known-plaintext attack uses hill climbing in three nested loops.
    Each loop applies different kinds of transformations on the key to get the correct key.
    <newline/>
    The algorithm works as follows:
	  <newline/>
    1. The external basic settings of the rotors are set to the default value 'AAAAA'.
	  <newline/>
    2. A certain number (here: 100) of random keys are created.
	  <newline/>
    3. Each key is analyzed using a scoring function and a score is calculated. The value calculated here is called the Aggregate Displacement Error (ADE) score.
	   For the ADE score, the expected displacement is compared with the actual displacement. The difference is called displacement error.
	   (Displacement refers to the distance between the encrypted and unencrypted letters.
	    The displacement results from the various components of the key.)
	   This score can only be calculated for the known-plaintext attack because it requires not only the encrypted but also the unencrypted text.
	  <newline/>
    4. Of the 100 randomly generated keys, the one with the best score is used for the further attack.
	  <newline/>
    5. The following 3 loops are carried out until the ADE no longer improves.
	   (The target value of the ADE is 130,000, which has proven to be particularly suitable in the analyses.)
		<newline/>
    a. Various transformations are performed on the pin settings. The ADE is calculated after each transformation.
		   If the new ADE is better than the previous one, the new key is used for the rest attack.
		<newline/>
    b. A number of transformations are performed on the lug settings, but only those that do not contain lug overlaps.
		   The ADE is calculated after each transformation. If the new ADE is better than the previous one, the new key is used for the next attack.
		<newline/>
    c. Like b., except that all transformations are applied to the lug settings.
	  <newline/>
    6. If the target value of 130,000 is reached, the correct key settings have been found. If 5a, 5b and 5c have not led to any improvements in the ADE,
	   the process is restarted at step 2, i.e. with the creation of new random keys."
    
  </introduction>

  <introduction lang="de-DE">
    Die Hagelin M-209 ist eine tragbare Chiffriemachine, welche vom US-Militär wären dem zweiten Weltkrieg und bis zum Korea Krieg verwendet wurde.
    Die originale M-209 ist vollständig analog und hat einen größeren Schlüsselraum als die Enigma, die von den Deutschen im zweiten Weltkrieg verwendet wurde.
    <newline/>
    Dieser Analysator stellt zwei Arten von Angriffen bereits: ciphertext-only und known-plaintext.
    <newline/>
    <newline/>
    <b>Ciphertext-Only Angriff</b>
    <newline/>
    Der Ciphertext-Only Angriff verwendet Hillclimbing und Simulated Annealing um nach optimalen Schlüsseleinstellungen zu suchen.
    Diese Methoden werden in einem verschachteltem Hybrid-Ansatz verwendet.
    Ein Hillclimbing Prozess sucht nach optimalen Lug-Einstellungen und ein innerer Simulated Annealing Prozess sucht nach optimalen Pin-Einstellungen.
    Diese Methoden werden wie folgt, verwendet:
    <newline/>
    <newline/>
	  HillClimbing-Algorithmus für die Schieber (Lug) Einstellungen:
	  <newline/>1. Es wird eine bestimmte Anzahl an zufälligen Schlüsseln erstellt. Jeder Schlüssel wird ausgewertet, indem man mit dem Schlüssel den verschlüsselten Text entschlüsselt. Anhand der relativen Häufigkeiten der Buchstaben, im entschlüsselten Text, wird ein Bewertungswert berechnet. 
	   Die bewerteten Schlüssel werden verglichen und der beste Schlüssel wird weiter im Algorithmus verwendet. 
	  <newline/>2. Solange es keinen neuen besten Schlüssel gibt, werden folgende Schritte durchgeführt: 
    <newline/>a. Es werden kleine Änderungen an Schiebereinstellungen gemacht (2 Einstellungen verändert). 
	    Anschließend wird ein Simulated-Annealing-Algorithmus auf den Stift (Pin) Einstellungen ausgeführt, der weiter unten beschreiben ist.
		Es werden zu den aktuellen Schieber-Einstellungen, die besten Stifteinstellungen gesucht und der beste Schlüssel wir behalten.
	  <newline/>
    b. Wenn a. zu keinem besseren Schlüssel geführt hat, werden größere Veränderungen an den Schiebereinstellungen gemacht und anschließend wieder nach den besten Stifteinstellungen gesucht (analog zu a.).
	  <newline/>
    <newline/>
    Simulated-Annealing-Algorithmus für die Stifteinstellungen:
	  <newline/>
    1. Es werden zufällige Stifteinstellungen generiert.
	  <newline/>
    2. Solange die Temperatur größer als ein bestimmter Grenzwert ist, wird die Temperatur für folgende Schritte verwendet, ansonsten wird die Temperatur auf 0 gesetzt: 
	  <newline/>
    a. Es werden verschiedene Änderungen an den Stifteinstellungen vorgenommen
	    z.B. 1 Stift wird geflippt, alle Stifte werden invertiert, 2 Stifte an einem, oder an zwei unterschiedlichen Rotoren werden geflippt.
	  <newline/>
    b. Der so erhaltene Schlüssel wird ausgewertet.
    <newline/>c. Abhängig vom Wert und von der Temperatur, wird entschieden, ob der Schlüssel ein neuer bester Schlüssel ist.
    <newline/>
    <newline/>
    <b>Known-Plaintext Angriff</b>
    <newline/>
    Der Known-Plaintext Angriff verwendet Hillclimbin in drei verschachtelten Schleifen.
    Jede Schleife wendet verschiedene Arten von Transformationen auf den Schlüssel an um den richtigen Schlüssel zu erhalten.
    <newline/><newline/>
    Der Ablauf des Algorithmus ist folgender: 
	  <newline/>
    1. Die externen Grundeinstellungen der Rotoren werden auf den Standardwert 'AAAAA' gesetzt.
    <newline/>
    2. Es wird eine bestimmte Anzahl (hier: 100) an zufälligen Schlüsseln erstellt.
	  <newline/>
    3. Jeder Schlüssel wird mittels einer Scoring function analysiert und ein Wert (Score) berechnet. Die hier berechnete Wert wird Aggregate Displacement Error (ADE) Score genannt.
	   Für den ADE Score wird der erwartete mit dem tatsächlichen Displacement verglichen. Der Unterschied wird Displacement Error genannt.
	   (Displacement bezeichnet den Abstand zwischen dem verschlüsselten und unverschlüsselten Buchstaben.
	   Das Displacement ergibt sich aus den verchiedenen Komponenten des Schlüssels.)
	   Dieser Score kann nur bei dem Known-Plaintext Angriff berechnet werden, weil man dafür nicht nur den verschlüsselten, sondern auch den unverschlüsselten Text braucht.
	  <newline/>
    4. Von den 100 zufällig erstellten Schlüsseln wird der, mit dem besten Score für den weiteren Angriff verwendet.
	  <newline/>
    5. Folgende 3 Schleifen werden durchbeführt, bis der ADE sich nicht mehr verbessert.
	   (Der Zielwert vom ADE ist 130 000. Dieser Wert hat sich bei den Analysen als besonders geeignet erwiesen.)
		<newline/>
    a. Verschiedene Transformationen an den Pin Einstellungen werden durchgeführt. Nach jeder Transformation wird der ADE berechnet.
		   Ist der neue ADE besser, als der vorherige, wird der neue Schlüssel für den weiteren Angriff verwendet.
		<newline/>
    b. Eine Menge von Transformationen an den Lug Einstellungen werden durchgeführt, aber nur solche, welche keine Lug Overlaps enthalten.
		   Nach jeder Transformation wird der ADE berechnet. Ist der neue ADE besser, als der vorherige, wird der neue Schlüssel für den weiteren Angriff verwendet.
		<newline/>
    c. Wie b., außer, dass alle Transformationen für die Lug Einstellungen angewendet werden.
	  <newline/>
    6. Wird der Zielwert von 130 000 erreicht, wurden die richtigen Schlüsseleinstellungen gefunden. Falls 5a, 5b und 5c zu keinen Verbesserungen des ADE geführt haben,
	   wird am Schritt 2 neugestartet, d.h. mit der Erstellung neuer zufälliger Schlüssel.
</introduction>

  <usage lang="en">
    In the general block, you can set some general and more commonly needed parameters.
    
    <newline/>
    At first you can select the kind of attack, for this you can choose between the ciphertext-only and the known-plaintext attack.
    <newline/>
    In the 'Cores used' input field, you can set how much cores the application can use for the attack.
    <newline/>
    In the 'Language' menu, you have to set the language of the texts, used for the attacks.
    <newline/>
    In the  'Letter count' menu, you set the number of letters in the used alphabet of the language.
    <newline/>
    In the 'Grams type' menu, you can choose what kind of grams should be used for the scoring function.
    <newline/>
    Using 'Expert mode' checkbox, you can hide and show further settings and parameters for experts.
    
  </usage>

  <usage lang="de-DE">
    Im 'Allgemein' Block kann man allgemeine und häufig genutzte Parameter einstellen.

    <newline/>
    Als erstes kann man die Angriffsart auswählen, dazu kann man zwischen Ciphertext-only und Known-Plaintext wählen.
    <newline/>
    Im 'Verwendete Kerne' Eingabefeld kann man einstellen, wie viele Kerne die Anwendung für den Angriff verwenden darf.
    <newline/>
    Im 'Sprache' Menü kann man die Sprache der Texte angeben, die anmgegriffen werden.
    <newline/>
    Im 'Buchstabenanzahl des Alphabets' Menu kann man die Zahl der Buchstaben der Sprache angeben.e.
    <newline/>
    Im 'Typ von Grams' Menü kann man auswählen, welche Art von Grams für die Auswertungsfunktion verwendet werden soll.
    <newline/>
    Mittels der 'Expertenmodus' Checkbox, kann man sich weitere Einstellungen bzw. Parameter für Experten anzeigen lassen.
  </usage>
  
  <presentation lang="en">
  </presentation>
  
  <presentation lang="de-DE">
  </presentation>
  
  <references>
    <linkReference id="wikipedia">
      <link url="http://en.wikipedia.org/wiki/M-209" lang="en" />
      <caption lang="en">M209 in Wikipedia</caption>
      <link url="http://de.wikipedia.org/wiki/M-209" lang="de-DE" />
      <caption lang="de-DE">M209 in Wikipedia</caption>
    </linkReference>
  </references>
</documentation>