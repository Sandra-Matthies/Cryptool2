//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CrypTool.M138.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CrypTool.M138.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encrypt / Decrypt.
        /// </summary>
        internal static string ActionCaption {
            get {
                return ResourceManager.GetString("ActionCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encrypt.
        /// </summary>
        internal static string ActionList1 {
            get {
                return ResourceManager.GetString("ActionList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decrypt.
        /// </summary>
        internal static string ActionList2 {
            get {
                return ResourceManager.GetString("ActionList2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select whether you want to encrypt or decrypt the input..
        /// </summary>
        internal static string ActionTooltip {
            get {
                return ResourceManager.GetString("ActionTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Case sensitivity.
        /// </summary>
        internal static string CaseSensitivyCaption {
            get {
                return ResourceManager.GetString("CaseSensitivyCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select whether the device should work case sensitive or not..
        /// </summary>
        internal static string CaseSensitivyTooltip {
            get {
                return ResourceManager.GetString("CaseSensitivyTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Handling of invalid characters.
        /// </summary>
        internal static string InvalidCharacterHandlingCaption {
            get {
                return ResourceManager.GetString("InvalidCharacterHandlingCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete.
        /// </summary>
        internal static string InvalidCharacterHandlingList1 {
            get {
                return ResourceManager.GetString("InvalidCharacterHandlingList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignore.
        /// </summary>
        internal static string InvalidCharacterHandlingList2 {
            get {
                return ResourceManager.GetString("InvalidCharacterHandlingList2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace by &apos;?&apos;.
        /// </summary>
        internal static string InvalidCharacterHandlingList3 {
            get {
                return ResourceManager.GetString("InvalidCharacterHandlingList3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select how invalid characters that are not supported by the used strips should be handled..
        /// </summary>
        internal static string InvalidCharacterHandlingTooltip {
            get {
                return ResourceManager.GetString("InvalidCharacterHandlingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key.
        /// </summary>
        internal static string KeyCaption {
            get {
                return ResourceManager.GetString("KeyCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key to be used for en-/decryption. Format should be &quot;Strip_1, Strip_2,...,Strip_n / offset&quot;. Separator can be defined in the plugin&apos;s settings..
        /// </summary>
        internal static string KeyTooltip {
            get {
                return ResourceManager.GetString("KeyTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to M-138.
        /// </summary>
        internal static string PluginCaption {
            get {
                return ResourceManager.GetString("PluginCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to M-138, a strip cipher. This variant of a poly-alphabetic encryption was used by the US Armed Forces since 1934..
        /// </summary>
        internal static string PluginTooltip {
            get {
                return ResourceManager.GetString("PluginTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Separator for offset.
        /// </summary>
        internal static string SeparatorOffCharCaption {
            get {
                return ResourceManager.GetString("SeparatorOffCharCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Separator used to separate the strips from the offset.
        /// </summary>
        internal static string SeparatorOffCharTooltip {
            get {
                return ResourceManager.GetString("SeparatorOffCharTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Separator for strips.
        /// </summary>
        internal static string SeparatorStripCaption {
            get {
                return ResourceManager.GetString("SeparatorStripCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Separator that is used to separate the different strips used from each other.
        /// </summary>
        internal static string SeparatorStripTooltip {
            get {
                return ResourceManager.GetString("SeparatorStripTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Strips.
        /// </summary>
        internal static string StripsCaption {
            get {
                return ResourceManager.GetString("StripsCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the strips as string, where each line defines one strip..
        /// </summary>
        internal static string StripsTooltip {
            get {
                return ResourceManager.GetString("StripsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Text Input.
        /// </summary>
        internal static string TextInputCaption {
            get {
                return ResourceManager.GetString("TextInputCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connect the text that should be encrypted/decrypted..
        /// </summary>
        internal static string TextInputTooltip {
            get {
                return ResourceManager.GetString("TextInputTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Text Output.
        /// </summary>
        internal static string TextOutputCaption {
            get {
                return ResourceManager.GetString("TextOutputCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resulting ciphertext/plaintext.
        /// </summary>
        internal static string TextOutputTooltip {
            get {
                return ResourceManager.GetString("TextOutputTooltip", resourceCulture);
            }
        }
    }
}
